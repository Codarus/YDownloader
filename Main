import os
import fnmatch
import threading
import moviepy.editor as mp
from pytube import YouTube, Playlist
from tkinter import *


def clean_title(title):
    check = ["~", "*", "<", ">", "?", ":", "|", "/", "\\", ".", ",", "\"", "\'"]

    for _ in check:
        if _ in title:
            title = title.replace(_, "")

    return title


def download():
    def inner_download_audio():
        url = url_entry.get()
        url_entry.delete(0, END)
        yt = YouTube(url)

        if "&list=" not in url:
            c_title = clean_title(yt.title)

            yt.streams.first().download(".\\temp")

            if os.path.exists(".\\temp\\" + c_title + ".mp4"):
                with mp.VideoFileClip(".\\temp\\" + c_title + ".mp4") as clip:
                    clip.audio.write_audiofile(c_title + ".mp3")
            else:
                yt.streams.filter(only_audio=True).first().download()

            for file in os.listdir(".\\temp\\"):
                if os.path.splitext(file)[0] == c_title:
                    os.remove(".\\temp\\" + file)
        else:
            pl = Playlist(url)
            pl.download_all(".\\temp\\")

            for file in os.listdir(".\\temp\\"):
                c_title = clean_title(os.path.splitext(file)[0])

                if os.path.exists(".\\temp\\" + c_title + ".mp4"):
                    with mp.VideoFileClip(".\\temp\\" + c_title + ".mp4") as clip:
                        clip.audio.write_audiofile(c_title + ".mp3")
                    os.remove(".\\temp\\" + file)
                else:
                    print("File not found: " + file)

        print("Done")

    def inner_download_video():
        url = url_entry.get()
        url_entry.delete(0, END)
        yt = YouTube(url)

        if "&list=" not in url:
            yt.streams.first().download()
        else:
            pl = Playlist(url)
            pl.download_all()

        print("Done")

    state = url_checkbox_state.get()

    if state == 0:
        tv = threading.Thread(target=inner_download_video)
        tv.start()
    else:
        ta = threading.Thread(target=inner_download_audio)
        ta.start()

    return 0


# tkinter
root = Tk()
root.title("YDownloader")
root.geometry("250x100+650+300")

url_entry = Entry(root, width=50)

url_checkbox_state = IntVar()
url_checkbox = Checkbutton(root, text="Audio only", variable=url_checkbox_state)
# 0 = not checked

download_btn = Button(root, bg="green", text="Download", command=download)

url_entry.pack()
url_checkbox.pack()
download_btn.pack()

root.mainloop()

# TODO 1: Add progress bar
# TODO 2: Create file download location dropdown menu (possible config file)
